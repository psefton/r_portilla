conn <- redshift.connect("jdbc:postgresql://redshift.udemy.com:5439/prod", "peter","tPW66eP774")
detach("package:redshift", unload=TRUE)
library("redshift", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(redshift)
conn <- redshift.connect("jdbc:postgresql://redshift.udemy.com:5439/prod", "peter","tPW66eP774")
library(rJava)
library(xlsxjars)
install.packages("rJava",type='source')
install.packages("rJava", type = "source")
library(redshift)
conn <- redshift.connect("jdbc:postgresql://redshift.udemy.com:5439/prod", "peter","tPW66eP774")
my_query <-
"SELECT * FROM adhoc.inactive_model_result"
my_data <- dbGetQuery(conn, paste(my_query))
options( java.parameters = "-Xmx4g" )
my_data <- dbGetQuery(conn, paste(my_query))
library(redshift)
conn <- redshift.connect("jdbc:postgresql://redshift.udemy.com:5439/prod", "peter","tPW66eP774")
my_query <-
"SELECT * FROM adhoc.inactive_model_result"
options( java.parameters = "-Xmx4g" )
my_data <- dbGetQuery(conn, paste(my_query))
my_query <-
"SELECT *
FROM adhoc.inactive_model_result
order by random() LIMIT 500000;"
my_data <- dbGetQuery(conn, paste(my_query))
conn <- redshift.connect("jdbc:postgresql://redshift.udemy.com:5439/prod", "peter","tPW66eP774")
my_data <- dbGetQuery(conn, paste(my_query))
my_data <- read.csv('inactive_model_result_v2.csv000', header = FALSE)
head(my_data)
colnames(my_data) <- c("userid","visit_rank","days_since_signup","days_since_last_visit","is_visit_of_signup","num_courses_day","num_unique_courses_day","clp_view_avg_rating","total_enrolls_day","num_free_enrolls_day","num_premium_free_enrolls_day","num_paid_enrolls_day","total_full_refunds_day","total_review_day","num_free_bad_review_day","num_premium_free_bad_review_day","num_paid_bad_review_day","num_free_good_review_day","num_premium_free_good_review_day","num_paid_good_review_day","has_unsub_day","consume_avg_rating","free_consumed_day","premium_free_consumed_day","paid_consumed_day","num_discussions_created","num_discussions_replied","reply_rate","total_enrolls_past","num_free_enrolls_past","num_premium_free_enrolls_past","num_paid_enrolls_past","total_full_refunds_past","open_rate_last_30d","total_review_past","num_free_bad_review_past","num_premium_free_bad_review_past","num_paid_bad_review_past","num_free_good_review_past","num_premium_free_good_review_past","num_paid_good_review_past","num_unique_traffic_channels","num_unique_platforms","has_mobile_app","is_organic","is_email","is_lifecycle_ads","is_new_user_ads","is_affiliate","is_instructor","is_blog_seo","is_other_seo","is_push","is_bd","is_ios","is_android_mini","is_android_web","is_web","is_ios_web","is_android","is_mobile_app","is_mobile_web","return_date","has_return","days_until_return","has_return_20","has_return_60","return_visit_rank","has_purch_70")
head(my_data)
str(my_data)
my_data$is_bd <- NULL
my_data$total_enrolls_day <- NULL
my_data$num_discussions_replied <- NULL
my_data$reply_rate <- NULL
my_data$total_enrolls_past <- NULL
my_data$total_review_day <- NULL
my_data$return_visit_rank <- NULL
my_data$return_date <- NULL
my_data$days_until_return <- NULL
my_data$is_visit_of_signup <- as.character(my_data$is_visit_of_signup)
my_data$is_visit_of_signup[my_data$is_visit_of_signup  =='t'] <- 1
my_data$is_visit_of_signup[my_data$is_visit_of_signup  =='f'] <- 0
my_data$is_visit_of_signup <- as.numeric(my_data$is_visit_of_signup)
rm(data_scale_test)
data_scale_test <- data.frame(scale(my_data$visit_rank),
scale(my_data$days_since_signup),
scale(my_data$days_since_last_visit),
scale(my_data$is_visit_of_signup),
scale(my_data$num_courses_day),
scale(my_data$num_unique_courses_day),
scale(my_data$clp_view_avg_rating),
scale(my_data$num_free_enrolls_day),
scale(my_data$num_premium_free_enrolls_day),
scale(my_data$num_paid_enrolls_day),
scale(my_data$total_full_refunds_day),
scale(my_data$num_free_bad_review_day),
scale(my_data$num_premium_free_bad_review_day),
scale(my_data$num_paid_bad_review_day),
scale(my_data$num_free_good_review_day),
scale(my_data$num_premium_free_good_review_day),
scale(my_data$num_paid_good_review_day),
scale(my_data$has_unsub_day),
scale(my_data$consume_avg_rating),
scale(my_data$free_consumed_day),
scale(my_data$premium_free_consumed_day),
scale(my_data$paid_consumed_day),
scale(my_data$num_discussions_created),
scale(my_data$num_free_enrolls_past),
scale(my_data$num_premium_free_enrolls_past),
scale(my_data$num_paid_enrolls_past),
scale(my_data$total_full_refunds_past),
scale(my_data$open_rate_last_30d),
scale(my_data$total_review_past),
scale(my_data$num_free_bad_review_past),
scale(my_data$num_premium_free_bad_review_past),
scale(my_data$num_paid_bad_review_past),
scale(my_data$num_free_good_review_past),
scale(my_data$num_premium_free_good_review_past),
scale(my_data$num_paid_good_review_past),
scale(my_data$num_unique_traffic_channels),
scale(my_data$num_unique_platforms),
scale(my_data$has_mobile_app),
scale(my_data$is_organic),
scale(my_data$is_email),
scale(my_data$is_lifecycle_ads),
scale(my_data$is_new_user_ads),
scale(my_data$is_affiliate),
scale(my_data$is_instructor),
scale(my_data$is_blog_seo),
scale(my_data$is_other_seo),
scale(my_data$is_push),
scale(my_data$is_ios),
scale(my_data$is_android_mini),
scale(my_data$is_android_web),
scale(my_data$is_web),
scale(my_data$is_ios_web),
scale(my_data$is_android),
scale(my_data$is_mobile_app),
scale(my_data$is_mobile_web),
my_data$has_return,
my_data$has_return_20,
my_data$has_return_60,
my_data$has_purch_70)
pairs(~scale.my_data.num_unique_traffic_channels.+data_scale_test$scale.my_data.days_since_signup.+data_scale_test$scale.my_data.visit_rank.,data=data_scale_test )
setwd("~/")
my_data <- read.csv('inactive_model_result_v2.csv000', header = FALSE)
head(my_data)
colnames(my_data) <- c("userid","visit_rank","days_since_signup","days_since_last_visit","is_visit_of_signup","num_courses_day","num_unique_courses_day","clp_view_avg_rating","total_enrolls_day","num_free_enrolls_day","num_premium_free_enrolls_day","num_paid_enrolls_day","total_full_refunds_day","total_review_day","num_free_bad_review_day","num_premium_free_bad_review_day","num_paid_bad_review_day","num_free_good_review_day","num_premium_free_good_review_day","num_paid_good_review_day","has_unsub_day","consume_avg_rating","free_consumed_day","premium_free_consumed_day","paid_consumed_day","num_discussions_created","num_discussions_replied","reply_rate","total_enrolls_past","num_free_enrolls_past","num_premium_free_enrolls_past","num_paid_enrolls_past","total_full_refunds_past","open_rate_last_30d","total_review_past","num_free_bad_review_past","num_premium_free_bad_review_past","num_paid_bad_review_past","num_free_good_review_past","num_premium_free_good_review_past","num_paid_good_review_past","num_unique_traffic_channels","num_unique_platforms","has_mobile_app","is_organic","is_email","is_lifecycle_ads","is_new_user_ads","is_affiliate","is_instructor","is_blog_seo","is_other_seo","is_push","is_bd","is_ios","is_android_mini","is_android_web","is_web","is_ios_web","is_android","is_mobile_app","is_mobile_web","return_date","has_return","days_until_return","has_return_20","has_return_60","return_visit_rank","has_purch_70")
head(my_data)
str(my_data)
my_data$is_bd <- NULL
my_data$total_enrolls_day <- NULL
my_data$num_discussions_replied <- NULL
my_data$reply_rate <- NULL
my_data$total_enrolls_past <- NULL
my_data$total_review_day <- NULL
my_data$return_visit_rank <- NULL
my_data$return_date <- NULL
my_data$days_until_return <- NULL
my_data$is_visit_of_signup <- as.character(my_data$is_visit_of_signup)
my_data$is_visit_of_signup[my_data$is_visit_of_signup  =='t'] <- 1
my_data$is_visit_of_signup[my_data$is_visit_of_signup  =='f'] <- 0
my_data$is_visit_of_signup <- as.numeric(my_data$is_visit_of_signup)
rm(data_scale_test)
data_scale_test <- data.frame(scale(my_data$visit_rank),
scale(my_data$days_since_signup),
scale(my_data$days_since_last_visit),
scale(my_data$is_visit_of_signup),
scale(my_data$num_courses_day),
scale(my_data$num_unique_courses_day),
scale(my_data$clp_view_avg_rating),
scale(my_data$num_free_enrolls_day),
scale(my_data$num_premium_free_enrolls_day),
scale(my_data$num_paid_enrolls_day),
scale(my_data$total_full_refunds_day),
scale(my_data$num_free_bad_review_day),
scale(my_data$num_premium_free_bad_review_day),
scale(my_data$num_paid_bad_review_day),
scale(my_data$num_free_good_review_day),
scale(my_data$num_premium_free_good_review_day),
scale(my_data$num_paid_good_review_day),
scale(my_data$has_unsub_day),
scale(my_data$consume_avg_rating),
scale(my_data$free_consumed_day),
scale(my_data$premium_free_consumed_day),
scale(my_data$paid_consumed_day),
scale(my_data$num_discussions_created),
scale(my_data$num_free_enrolls_past),
scale(my_data$num_premium_free_enrolls_past),
scale(my_data$num_paid_enrolls_past),
scale(my_data$total_full_refunds_past),
scale(my_data$open_rate_last_30d),
scale(my_data$total_review_past),
scale(my_data$num_free_bad_review_past),
scale(my_data$num_premium_free_bad_review_past),
scale(my_data$num_paid_bad_review_past),
scale(my_data$num_free_good_review_past),
scale(my_data$num_premium_free_good_review_past),
scale(my_data$num_paid_good_review_past),
scale(my_data$num_unique_traffic_channels),
scale(my_data$num_unique_platforms),
scale(my_data$has_mobile_app),
scale(my_data$is_organic),
scale(my_data$is_email),
scale(my_data$is_lifecycle_ads),
scale(my_data$is_new_user_ads),
scale(my_data$is_affiliate),
scale(my_data$is_instructor),
scale(my_data$is_blog_seo),
scale(my_data$is_other_seo),
scale(my_data$is_push),
scale(my_data$is_ios),
scale(my_data$is_android_mini),
scale(my_data$is_android_web),
scale(my_data$is_web),
scale(my_data$is_ios_web),
scale(my_data$is_android),
scale(my_data$is_mobile_app),
scale(my_data$is_mobile_web),
my_data$has_return,
my_data$has_return_20,
my_data$has_return_60,
my_data$has_purch_70)
pairs(~scale.my_data.num_unique_traffic_channels.+data_scale_test$scale.my_data.days_since_signup.+data_scale_test$scale.my_data.visit_rank.,data=data_scale_test )
my_data <- read.csv('inactive_model_result_v2.csv000', header = FALSE)
head(my_data)
colnames(my_data) <- c("userid","visit_rank","days_since_signup","days_since_last_visit","is_visit_of_signup","num_courses_day","num_unique_courses_day","clp_view_avg_rating","total_enrolls_day","num_free_enrolls_day","num_premium_free_enrolls_day","num_paid_enrolls_day","total_full_refunds_day","total_review_day","num_free_bad_review_day","num_premium_free_bad_review_day","num_paid_bad_review_day","num_free_good_review_day","num_premium_free_good_review_day","num_paid_good_review_day","has_unsub_day","consume_avg_rating","free_consumed_day","premium_free_consumed_day","paid_consumed_day","num_discussions_created","num_discussions_replied","reply_rate","total_enrolls_past","num_free_enrolls_past","num_premium_free_enrolls_past","num_paid_enrolls_past","total_full_refunds_past","open_rate_last_30d","total_review_past","num_free_bad_review_past","num_premium_free_bad_review_past","num_paid_bad_review_past","num_free_good_review_past","num_premium_free_good_review_past","num_paid_good_review_past","num_unique_traffic_channels","num_unique_platforms","has_mobile_app","is_organic","is_email","is_lifecycle_ads","is_new_user_ads","is_affiliate","is_instructor","is_blog_seo","is_other_seo","is_push","is_bd","is_ios","is_android_mini","is_android_web","is_web","is_ios_web","is_android","is_mobile_app","is_mobile_web","return_date","has_return","days_until_return","has_return_20","has_return_60","return_visit_rank","has_purch_70")
head(my_data)
str(my_data)
my_data$is_bd <- NULL
my_data$total_enrolls_day <- NULL
my_data$num_discussions_replied <- NULL
my_data$reply_rate <- NULL
my_data$total_enrolls_past <- NULL
my_data$total_review_day <- NULL
my_data$return_visit_rank <- NULL
my_data$return_date <- NULL
my_data$days_until_return <- NULL
my_data$is_visit_of_signup <- as.character(my_data$is_visit_of_signup)
my_data$is_visit_of_signup[my_data$is_visit_of_signup  =='t'] <- 1
my_data$is_visit_of_signup[my_data$is_visit_of_signup  =='f'] <- 0
my_data$is_visit_of_signup <- as.numeric(my_data$is_visit_of_signup)
rm(data_scale_test)
data_scale_test <- data.frame(scale(my_data$visit_rank),
scale(my_data$days_since_signup),
scale(my_data$days_since_last_visit),
scale(my_data$is_visit_of_signup),
scale(my_data$num_courses_day),
scale(my_data$num_unique_courses_day),
scale(my_data$clp_view_avg_rating),
scale(my_data$num_free_enrolls_day),
scale(my_data$num_premium_free_enrolls_day),
scale(my_data$num_paid_enrolls_day),
scale(my_data$total_full_refunds_day),
scale(my_data$num_free_bad_review_day),
scale(my_data$num_premium_free_bad_review_day),
scale(my_data$num_paid_bad_review_day),
scale(my_data$num_free_good_review_day),
scale(my_data$num_premium_free_good_review_day),
scale(my_data$num_paid_good_review_day),
scale(my_data$has_unsub_day),
scale(my_data$consume_avg_rating),
scale(my_data$free_consumed_day),
scale(my_data$premium_free_consumed_day),
scale(my_data$paid_consumed_day),
scale(my_data$num_discussions_created),
scale(my_data$num_free_enrolls_past),
scale(my_data$num_premium_free_enrolls_past),
scale(my_data$num_paid_enrolls_past),
scale(my_data$total_full_refunds_past),
scale(my_data$open_rate_last_30d),
scale(my_data$total_review_past),
scale(my_data$num_free_bad_review_past),
scale(my_data$num_premium_free_bad_review_past),
scale(my_data$num_paid_bad_review_past),
scale(my_data$num_free_good_review_past),
scale(my_data$num_premium_free_good_review_past),
scale(my_data$num_paid_good_review_past),
scale(my_data$num_unique_traffic_channels),
scale(my_data$num_unique_platforms),
scale(my_data$has_mobile_app),
scale(my_data$is_organic),
scale(my_data$is_email),
scale(my_data$is_lifecycle_ads),
scale(my_data$is_new_user_ads),
scale(my_data$is_affiliate),
scale(my_data$is_instructor),
scale(my_data$is_blog_seo),
scale(my_data$is_other_seo),
scale(my_data$is_push),
scale(my_data$is_ios),
scale(my_data$is_android_mini),
scale(my_data$is_android_web),
scale(my_data$is_web),
scale(my_data$is_ios_web),
scale(my_data$is_android),
scale(my_data$is_mobile_app),
scale(my_data$is_mobile_web),
my_data$has_return,
my_data$has_return_20,
my_data$has_return_60,
my_data$has_purch_70)
pairs(~scale.my_data.num_unique_traffic_channels.+data_scale_test$scale.my_data.days_since_signup.+data_scale_test$scale.my_data.visit_rank.,data=data_scale_test )
recorders = data.frame("X"=c(0,0,1,1), "Y" = c(0,1,1,0),
row.names=c("A", "B","C","D"))
locs = data.frame("X"=c(.3,.5),"Y"=c(.8,.2))
intensities = data.frame("sine"=sin(0:99*(pi/10))+1.2,
"cosine"= .7*cos(0:99*(pi/15))+.9)
recorders
locs
intensities
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z, 555,z)
z*2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2 +1000
my_div
getwd()
ls()
x <-9
ls()
dir()
?list.files
args()
args(list.files())
args(list.files
)
setwd(old.dir)
old.dir <- getwd()
args(dir.created)
args(dir.create)
testdir <- dir.create()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.remame()
?file.remame
?file.rename()
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
args(file.path)
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
unlink("testdir2/", recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive= TRUE)
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1,20)
seq(0,10, by=.5)
seq(5,10, length=30)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2),each = 10)
state
state.x77
USPersonalExpenditure
women
data()
worldPhones
head(state.x77)
str(state.x77)
summary(state.x77)
days <- c("Mon", "Tues", "Wed", "thurs", "Fri")
tmp <- c(22.2, 21,21,23,24.3,25)
rain <- c(T,T,F,F,T)
df <- data.frame(days,tmp,rain)
df
days <- c("Mon", "Tues", "Wed", "thurs", "Fri")
tmp <- c(22.2, 21,23,24.3,25)
rain <- c(T,T,F,F,T)
df <- data.frame(days,tmp,rain)
df
str(df)
df[,'rain']
df[1:5,]
df[1:5,c('days','temp')]
df[1:5,c('days','tmp')]
df$tmp
df$days
df['days']
subset(df, subset= rain==T)
subset(df, subset= tmp>23)
sorted.tmp <- order(df['tmp'])
sorted.tmp
df[sorted.tmp]
df[sorted.tmp,]
desc.temp <- order(-df['tmp'])
df[desc.temp]
df[desc.temp]
desc.temp <- order(-df['tmp'])
df[desc.temp]
df[desc.temp,]
empty <- data.frame()
c1 <- 1:10
c1
letters
c2<- letters[1:10]
c2
df <- data.frame(col.name.1 = c1, col.name.2 = c2)
df
clear
write.csv(df,file= 'saved_df.csv')
df2 <- read.csv('saved_df.csv')
df2
df
nrow(df)
ncol(df)
colnames(df)
rownames(df)
str(df)
summary(df)
df[[1,2]]
df[[2,2]]
df[[5,'col.name.2']]
df[[2,'col.name.1']] <- 9999
df[[2,'col.name.1']]
df
df[1,]
mtcars
head(mtcars)
head(mtcars)
mtcars$mpg
mtcars[,'mpg']
mtcars[,1]
mtcars[['mtcars']
]
mtcars[['mpg']]
mtcars['mpg']
head(mtcars[c('mpg','cyl')])
swirl
library("swirl")
swirl()
head(mtcars)
mtcars[mtscars$mpg >20]
mtcars[mtscars$mpg >20,]
mtcars[mtcars$mpg >20,]
mtcars[mtcars$mpg >20 & mtcars$cyl == 6,]
mtcars[mtcars$mpg >20 & mtcars$cyl == 6,c('mpg','cyl','hp')]
subset(mtcars,mpg>20 & cyl ==6)
clear
clear()
clean
clean()
head(mtcars)
mtcars(,c(1,2,3)
mtcars(,c(1,2,3))
mtcars(,c(1,2,3))
mtcars[,c(1,2,3)]
mtcars[,c('mpg','cyl','hp')]
is.na(mtcars)
any(is.na(mtcars))
df[is.na(df)] <- 0
sam <- c(22,150,'M')
frank <- c(25,165,'M')
amy <- c(26,120,'F')
df <- data.frame(sam,frank,amy)
df
sam <- c(22,25,26)
frank <- c(150,165,120)
amy <- c('M','M','F')
rnames <- c('Sam', 'Frank', 'Amy')
cnames <- c('Age', 'Weight', 'Sex')
df <- data.frame(sam,frank,amy)
df
df.colnames <- cnames
df.rownames <- rnames
df
df.colnames <- cnames
df.rownames <- rnames
df
colnames(df) <- cnames
rownames(df) <- rnames
df
is.data.frame(mtcars)
mat <- matrix(1:25,nrow=5)
data.frame(mat)
mat_df <- data.frame(mat)
is.data.frame(mat_df)
df <- mtcars
head(df)
avg(mtcars$mpg)
mean(mtcars$mpg)
subset(df,cyl ==6)
mtcars[,c('am','gear','carb')]
df2 <- cbind(df,hp/wt)
df2 <- cbind(df,df$hp/df$wt)
df2
colnames(df)['df$hp/df$wt'] <- 'performance'
colnames(df)[11] <- 'performance'
colnames(df2)[11] <- 'performance'
df2
df2
colnames(df2)[12] <- 'performance'
df2
help(round)
head(df)
head(mtcars)
colnames(df)[11] <- 'carb'
colnames(df2)[11] <- 'carb'
df2
df2$permformance <- round(df2$performance,2)
df2
mean(df[df$hp>100 & df$wt >2.5,c(df$mpg)])
mean(df[df$hp>100 & df$wt >2.5,df$mpg])
head(df)
df[df$hp>100 & df$wt >2.5,df$mpg]
df[df$hp>100 & df$wt >2.5,c(df$mpg)]
df[df$hp > 100 & df$wt > 2.5,]
df[df$hp > 100 & df$wt > 2.5,df$mpg]
df[df$hp > 100 & df$wt > 2.5,c(1)]
df[df$hp > 100 & df$wt > 2.5,c('mpg')]
mean(df[df$hp > 100 & df$wt > 2.5,c('mpg')])
df[c('Hornet Sportabout'), c('mpg')]
help(mean)
setwd("~/Dropbox (Udemy)/PeterLearns/R/R_Udemy_Portilla")

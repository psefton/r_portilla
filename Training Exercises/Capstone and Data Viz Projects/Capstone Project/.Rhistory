for(x in vec){
if(x%%3 > 0){
result = result + x
}
}
print(result)
}
summer(7,2,3)
summer(3,6,9)
summer(9,11,12)
summer <- function(num1,num2,num3){
result = 0
vec = vector('numeric')
vec =append(vec,num1)
vec =append(vec,num2)
vec =append(vec,num3)
print(vec)
for(x in vec){
if(x%%3 > 0){
result = result + x
}
}
print(result)
}
summer(7,2,3)
summer(3,6,9)
summer(9,11,12)
summer <- function(num1,num2,num3){
result = 0
vec <-  vector('numeric')
vec <-append(vec,num1)
vec <-append(vec,num2)
vec <-append(vec,num3)
print(vec)
for(x in vec){
if(x%%3 > 0){
result = result + x
}
}
print(result)
}
summer(7,2,3)
summer(3,6,9)
summer(9,11,12)
prime_check <- function(num){
if(num < 1){
return(FALSE)
}else if(num <= 3){
return(TRUE)
}else if(num %% 2 ==0 | n %% 3 == 0){
return(FALSE)
}
i <- 5
while(num >= i * i){
if(num %% i == 0 | num %% (i + 2) == 0){
return(FALSE)
}
i <- i + 6
}
}
prime_check(2)
prime_check(5)
prime_check(4)
prime_check(237)
prime_check(131)
prime_check <- function(num){
if(num < 1){
return(FALSE)
}else if(num <= 3){
return(TRUE)
}else if(num %% 2 ==0 | num %% 3 == 0){
return(FALSE)
}
i <- 5
while(num >= i * i){
if(num %% i == 0 | num %% (i + 2) == 0){
return(FALSE)
}
i <- i + 6
}
}
prime_check(2)
prime_check(5)
prime_check(4)
prime_check(237)
prime_check(131)
prime_check <- function(num){
if(num < 1){
return(FALSE)
break
}else if(num <= 3){
return(TRUE)
break
}else if(num %% 2 ==0 | num %% 3 == 0){
return(FALSE)
break
}
i <- 5
while(num >= i * i){
if(num %% i == 0 | num %% (i + 2) == 0){
return(FALSE)
break
}
i <- i + 6
}
return(TRUE)
break
}
prime_check(2)
prime_check(5)
prime_check(4)
prime_check(237)
prime_check(131)
seq(0,100,2)
seq(0,100,10)
v<- c(1,4,7,2,13,3,11)
sort(v)
sort(v, decreasing = TRUE)
cv <- c('b', 'd', 'a')
sort(cv)
v<- 1:10
rev(v)
str(v)
v
v2
v <- 1:10
v2 <- 35:40
v
v2
append(v,v2)
v <- c(1,2,3)
is.vector(v)
v
as.list(v)
as.matrix(v)
sample(x = 1:10,1)
sample(x = 1:10,1)
sample(x = 1:10,1)
sample(x = 1:100,1)
sample(x = 1:100,1)
sample(x = 1:100,3)
sample(x = 1:100,3)
v <- c(1,2,3,4,5)
addrand <- function(x){
ran <- sample(1:100,1)
return(x+ran)
}
print(addrand(10))
print(addrand(10))
print(addrand(10))
print(addrand(10))
print(addrand(10))
print(addrand(10))
lapply(v,addrand)
v <- 1:10
lapply(v,addrand)
lapply(v,addrand)
sapply(v,addrand)
v<- 1:5
v<- 1:5
times2 <- function(num){
return(num*2)
}
result <- sapply(v,times2)
print(result)
help(sapply)
v
sapply(v,function(num){num*2})
add_choice <- function(num,choice){
return(num+choice)
}
sapply(v,add_choice)
sapply(v,add_choice, choice = 100)
install.packages('dplyr')
library(dplyr)
install.packages('nycfligths13')
install.packages('nycflights13')
library(nycflights13)
head(flights)
summary(flights)
head(filter(flights,month==11,day==3,carrier=='AA'))
str(flight$carrier)
str(flights$carrier)
summary(flights$carrier)
slice(flights,1:10)
head(flights)
head(flights)
arrange(flights,year, month, day, airtime)
arrange(flights,year, month, day, airtime)
arrange(flights,year, month, day, air_time)
arrange(flights,year, month, day, arr_time)
arrange(flights,year, month, day, desc(arr_time)
arrange(flights,year, month, day, desc(arr_time))
arrange(flights,year, month, day, desc(arr_time))
head(select(flights,carrier))
head(select(flights,carrier, arr_time))
head(rename(flights, airline_carrier=carrier))
distinct(flights,airline_carrier)
distinct(flights,carrier)
head(mutate(flights,new_col = arr_delay - dep_delay))
head(transmutate(flights,new_col = arr_delay - dep_delay))
head(transmute(flights,new_col = arr_delay - dep_delay))
summarise(flights,avg_air_time = mean(air_time, na.rm = TRUE)
)
(flights,avg_air_time = mean(air_time, na.rm = TRUE))
summarise(flights,avg_air_time = mean(air_time, na.rm = TRUE))
library(dplyr)
library(nycflights13)
sample_n(flights,10)
sample_n(flights,10)
sample_frac(flights,.10)
df <- mtcars
filter(df,mpg>20)
sample_n(filter(df,mpg>20),size=5)
arrange(sample_n(filter(df,mpg>20),size=5),desc(mpg))
a <- filter(df,mpg>20)
b <- sample_n(a,size=5)
result <- arrange(b,desc(mpg))
print(result)
df %>% filter(mpg>20) %>% sample_n(size=5) %>% arrange(desc(mpg))
head(mtcars)
filter(mtcars,mpg >20,cyl ==6 )
arrange(mtcars,mtcars, cyl, desc(wt))
arrangefilter(mtcars,mpg >20,cyl ==6 ), cyl, desc(wt))
arrange(filter(mtcars,mpg >20,cyl ==6 ), cyl, desc(wt))
arrange(mtcars, cyl, desc(wt))
select(mtcars,mpg,ho)
select(mtcars,mpg,hp)
distinct(mtcars,gear)
head(mutate(mtcars,performance <- hp/wt))
head(mutate(mtcars,performance = hp/wt))
summarise(mtcars, mean(mpg))
mtcars %>% cyl == 6 %>% summarise(mean(hp))
mtcars %>% select(cyl == 6) %>% summarise(mean(hp))
mtcars %>% select(cyl = 6) %>% summarise(mean(hp))
mtcars %>% filter(cyl == 6) %>% summarise(mean(hp))
mtcars %>% filter(cyl == 6) %>% summarise(mean(hp))
install.packages('tidyr')
library(tidyr)
install.packages('data.table')
library(data.table)
comp <- c(1,1,1,2,2,2,3,3,3)
yr <- c(1998,1999,2000,1998,1999,2000,1998,1999,2000)
q1 <- runif(9, min=0, max=100)
q2 <- runif(9, min=0, max=100)
q3 <- runif(9, min=0, max=100)
q4 <- runif(9, min=0, max=100)
comp <- c(1,1,1,2,2,2,3,3,3)
yr <- c(1998,1999,2000,1998,1999,2000,1998,1999,2000)
q1 <- runif(9, min=0, max=100)
q2 <- runif(9, min=0, max=100)
q3 <- runif(9, min=0, max=100)
q4 <- runif(9, min=0, max=100)
df <- data.frame(comp=comp,year=yr,Qtr1 = q1,Qtr2 = q2,Qtr3 = q3,Qtr4 = q4)
df
gather(df,Quarter,Revenue,Qtr1:Qtr4)
help(gather())
help(gather)
df %>% gather(Quarter,Revenue,Qtr1:Qtr4)
setwd("~/Desktop")
library(ggplot2)
library(dplyr)
uft_hellobar <- read.csv('uft_hellobar.csv')
head(uft_hellobar)
str(uft_hellobar)
colnames(uft_hellobar) <- c('userid','month','category','subcategory','seen','click','num_purchases_before','minconsumed')
head(uft_hellobar)
class(uft_hellobar)
clickers <- uft_hellobar %>% filter(click ==1)
no_clickers <- uft_hellobar %>% filter(click ==0)
ggplot(uft_hellobar,aes(x = factor(click),y=num_purchases_before)) + geom_boxplot()
ggplot(uft_hellobar,aes(num_purchases_before)) + geom_histogram(binwidth = 100) + facet_grid(. ~ click)
summary(clickers$num_purchases_before)
summary(no_clickers$num_purchases_before)
ggplot(uft_hellobar,aes(x = factor(click),y=minconsumed)) + geom_boxplot()
ggplot(uft_hellobar,aes(minconsumed)) + geom_histogram(binwidth = 10000) + facet_grid(. ~ click)
ggplot(uft_hellobar,aes(minconsumed)) + geom_histogram(binwidth = 1000000) + facet_grid(. ~ click)
ggplot(uft_hellobar,aes(log(minconsumed)) + geom_histogram() + facet_grid(. ~ click)
)
ggplot(uft_hellobar,aes(log(minconsumed))) + geom_histogram() + facet_grid(. ~ click)
str(clickers)
no_clickers_sample <- sample(no_clickers,1414)
library(dplyr)
no_clickers_sample <- sample_n(no_clickers,1414)
uft_hellobar_sample <- rbind(clickers,no_clickers_sample)
head(uft_hellobar_sample)
ggplot(uft_hellobar_sample,aes(x = factor(click),y=num_purchases_before)) + geom_boxplot()
ggplot(uft_hellobar_sample,aes(num_purchases_before)) + geom_histogram(binwidth = 100) + facet_grid(. ~ click)
summary(clickers$num_purchases_before)
summary(no_clickers_sample$num_purchases_before)
ggplot(uft_hellobar_sample,aes(x = factor(click),y=minconsumed)) + geom_boxplot()
ggplot(uft_hellobar_sample,aes(log(minconsumed))) + geom_histogram() + facet_grid(. ~ click)
summary(clickers$minconsumed)
summary(no_clickers_sample$minconsumed)
ggplot(uft_hellobar_sample,aes(click)) + geom_bar() + facet_grid(. ~ category)
ggplot(uft_hellobar_sample,aes(factor(click)) + geom_bar() + facet_grid(. ~ category)
)
ggplot(uft_hellobar_sample,aes(factor(click))) + geom_bar() + facet_grid(. ~ category)
ggplot(uft_hellobar_sample,aes(factor(click))) + geom_bar() + facet_grid(. ~ subcategory)
ggplot(uft_hellobar_sample,aes(factor(click))) + geom_bar() + facet_grid(subcategory ~ .)
summarise(flights,avg_air_time = mean(air_time, na.rm = TRUE))
library(nycflights13)
summarise(flights,avg_air_time = mean(air_time, na.rm = TRUE))
subcats_of_interest <- c('Web Development','Programming Languages','Mobile Apps','IT Certification','Microsoft','Network & Security','Game Development','Social Media Marketing','Entrepreneurship','Finance','Data & Analytics','Home Business','Personal Transformation','Software Testing','Design Tools','3D & Animation','Other','Instruments','Communications')
ggplot(subset(uft_hellobar_sample, subcategory %in% subcats_of_interest),aes(factor(click))) + geom_bar() + facet_grid(subcategory ~ .)
ggplot(subset(uft_hellobar_sample, subcategory %in% subcats_of_interest),aes(factor(click))) + geom_bar() + facet_grid(. ~ subcategory)
ggplot(uft_hellobar_sample,aes(factor(click))) + geom_bar() + facet_grid(subcategory ~ .)
ggplot(uft_hellobar_sample,aes(factor(click))) + geom_bar() + facet_grid(month ~ .)
subcats_of_interest <- c('Web Development','Programming Languages','Mobile Apps','IT Certification','Microsoft','Network & Security','Game Development','Social Media Marketing','Entrepreneurship','Finance','Data & Analytics','Home Business','Personal Transformation','Software Testing','Design Tools','3D & Animation','Instruments','Communications','Databases','Project Management','Search Engine Optimization','Hardware')
ggplot(subset(uft_hellobar_sample, subcategory %in% subcats_of_interest),aes(factor(click))) + geom_bar() + facet_grid(. ~ subcategory)
ggplot(uft_hellobar_sample,aes(log(minconsumed))) + geom_histogram() + facet_grid(. ~ click)
ggplot(uft_hellobar_sample,aes(num_purchases_before)) + geom_histogram(binwidth = 100) + facet_grid(. ~ click)
ggplot(uft_hellobar_sample,aes(factor(click))) + geom_bar() + facet_grid(subcategory ~ .)
ggplot(uft_hellobar_sample,aes(factor(click))) + geom_bar() + facet_grid. ~ category)
ggplot(uft_hellobar_sample,aes(factor(click))) + geom_bar() + facet_grid(. ~ category)
summary(clickers$num_purchases_before)
ggplot(uft_hellobar_sample,aes(x = factor(click),y=num_purchases_before)) + geom_boxplot()
ggplot(uft_hellobar_sample,aes(x = factor(click),y=num_purchases_before)) + geom_crossbar()
ggplot(uft_hellobar_sample,aes(x = factor(click),y=num_purchases_before)) + geom_crossbar(fatten = 2)
summary(clickers$num_purchases_before)
ggplot(uft_hellobar_sample,aes(x = factor(click),y=num_purchases_before)) + geom_crossbar(fatten = 2,ymin=0, ymax =30 )
ggplot(uft_hellobar_sample,aes(x = factor(click),y=num_purchases_before)) + geom_boxplot(ymin=0, ymax =30 )
ylim1 = boxplot.stats(uft_hellobar_sample$num_purchases_before)$stats[c(1, 5)]
p1 <- ggplot(uft_hellobar_sample,aes(x = factor(click),y=num_purchases_before)) + geom_boxplot()
p1 + coord_cartesian(ylim = ylim1*1.05)
summary(clickers$num_purchases_before)
summary(no_clickers_sample$num_purchases_before)
ylim1 = boxplot.stats(uft_hellobar_sample$minconsumed)$stats[c(1, 5)]
p1 <- ggplot(uft_hellobar_sample,aes(x = factor(click),y=minconsumed)) + geom_boxplot()
p1 + coord_cartesian(ylim = ylim1*1.05)
summary(clickers$minconsumed)
summary(no_clickers_sample$minconsumed)
uft_hellobar <- read.csv('uft_hellobar.csv')
head(uft_hellobar)
str(uft_hellobar)
colnames(uft_hellobar) <- c('userid','month','category','subcategory','seen','click','num_purchases_before','minconsumed')
head(uft_hellobar)
class(uft_hellobar)
clickers <- uft_hellobar %>% filter(click ==1)
no_clickers <- uft_hellobar %>% filter(click ==0)
str(clickers)
no_clickers_sample <- sample_n(no_clickers,1414)
uft_hellobar_sample <- rbind(clickers,no_clickers_sample)
head(uft_hellobar_sample)
ylim1 = boxplot.stats(uft_hellobar_sample$minconsumed)$stats[c(1, 5)]
p1 <- ggplot(uft_hellobar_sample,aes(x = factor(click),y=minconsumed)) + geom_boxplot()
p1 + coord_cartesian(ylim = ylim1*1.05)
summary(clickers$minconsumed)
summary(no_clickers_sample$minconsumed)
#data viz project
#economist copy
library(ggplot2)
library(data.table)
library(csv)
econo.df <- read.csv('Economist_Assignment_Data.csv', header = TRUE)
head(econo.df)
str(econo.df)
econo.df <- econo.df[,c('Country','HDI.Rank','HDI', 'CPI', 'Region')]
pl <- ggplot(econo.df,aes(x=CPI, y=HDI)) + geom_point(aes(color=Region),size=5, shape = 21)
pl
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan",
"Afghanistan", "Congo", "Greece", "Argentina", "Brazil",
"India", "Italy", "China", "South Africa", "Spane",
"Botswana", "Cape Verde", "Bhutan", "Rwanda", "France",
"United States", "Germany", "Britain", "Barbados", "Norway", "Japan",
"New Zealand", "Singapore")
pl2 <- pl + geom_smooth(aes(group=1),method=lm,formula=y ~ log(x),se=FALSE,color='red')
pl2
pl3 <- pl2+ geom_text(aes(label = Country), color = "gray20",data = subset(econo.df, Country %in% pointsToLabel),check_overlap = TRUE)
pl4 <- pl3 + theme_bw() + scale_x_continuous(name ='Corruption Perceptions Index, 2011 (10=least corrupt)',limits = c(1,10),breaks = c(1:10))
pl4
pl5 <- pl4 + scale_y_continuous(name = 'HDI', limits = c(.2,1.0), breaks = c(.2,.4,.6,.8,1.0)) + ggtitle('Corruption and Human Development')
pl5
setwd("~/Dropbox (Udemy)/PeterLearns/R/R_Udemy_Portilla/Training Exercises/Capstone and Data Viz Projects/Data Visualization Project")
#data viz project
#economist copy
library(ggplot2)
library(data.table)
library(csv)
econo.df <- read.csv('Economist_Assignment_Data.csv', header = TRUE)
head(econo.df)
str(econo.df)
econo.df <- econo.df[,c('Country','HDI.Rank','HDI', 'CPI', 'Region')]
pl <- ggplot(econo.df,aes(x=CPI, y=HDI)) + geom_point(aes(color=Region),size=5, shape = 21)
pl
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan",
"Afghanistan", "Congo", "Greece", "Argentina", "Brazil",
"India", "Italy", "China", "South Africa", "Spane",
"Botswana", "Cape Verde", "Bhutan", "Rwanda", "France",
"United States", "Germany", "Britain", "Barbados", "Norway", "Japan",
"New Zealand", "Singapore")
pl2 <- pl + geom_smooth(aes(group=1),method=lm,formula=y ~ log(x),se=FALSE,color='red')
pl2
pl3 <- pl2+ geom_text(aes(label = Country), color = "gray20",data = subset(econo.df, Country %in% pointsToLabel),check_overlap = TRUE)
pl4 <- pl3 + theme_bw() + scale_x_continuous(name ='Corruption Perceptions Index, 2011 (10=least corrupt)',limits = c(1,10),breaks = c(1:10))
pl4
pl5 <- pl4 + scale_y_continuous(name = 'HDI', limits = c(.2,1.0), breaks = c(.2,.4,.6,.8,1.0)) + ggtitle('Corruption and Human Development')
pl5
install.packages("plotly")
library(ggplot2)
library(plotly)
pl <- ggplot(mtcars,aes(mpg,wt)) + geom_point()
pl
gpl <- ggplotly(pl)
gpl
batting <- read.csv('Batting.csv')
setwd("~/Dropbox (Udemy)/PeterLearns/R/R_Udemy_Portilla/Training Exercises/Capstone and Data Viz Projects/Capstone Project")
batting <- read.csv('Batting.csv')
head(batting)
str(batting)
head(batting$AB)
#data capstone project
#moneyball
library(ggplot2)
library(dplyr)
head(select(batting,AB))
head(batting$X2B)
batting$BA <- batting$H / batting$AB
head(batting)
tail(batting,5)
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
batting$SLG <- (batting$X1B+(2*batting$X2B) + (3 * batting$X3B) + (4 *batting$HR ))/batting$AB
tail(batting,5)
tail(batting,5)
str(batting)
salaries <- read.csv('Salaries.csv')
head(salaries)
summary(salaries)
summary(batting)
subset(batting,yearID >= 1985)
head(subset(batting,yearID >= 1985))
summary(subset(batting,yearID >= 1985))
batting_sub <- subset(batting,yearID >= 1985)
summary(batting_sub)
head(batting_sub)
combo <- merge(batting_sub,salaries, by = c("yearID", "playerID"))
head(combo)
summary(combo)
lost_players <- c("giambja01", "damonjo01", "saenzol01")
subset(combo,playerID %in% lost_players)
subset(combo,playerID %in% lost_players)
subset(combo,playerID %in% lost_players & yearID = 2001)
subset(combo,playerID %in% lost_players & yearID == 2001)
subset(combo,playerID %in% lost_players & yearID == 2001) %>% select(playerID,H,X2B,X3B,HR,OBP,SLG,BA,AB)
subset(combo,playerID %in% lost_players & yearID == 2001) %>% select(playerID,H,X2B,X3B,HR,OBP,SLG,BA,AB)
subset(combo,playerID %in% lost_players & yearID == 2001) %>% select(playerID,H,X2B,X3B,HR,OBP,SLG,BA,AB)
combo_2001 <- subset(combo,yearID = 2001)
head(combo)
summary(combo_2001)
combo_2001 <- subset(combo,yearID = 2001 & teamID != 'OAK')
head(combo)
summary(combo_2001)
ggplot(combo_2001, aes(salary,H)) + geom_point()
library(plotly)
ggplotly(pl)
pl <- ggplot(combo_2001, aes(salary,H)) + geom_point()
ggplotly(pl)
subset(combo,playerID %in% lost_players & yearID == 2001) %>% select(playerID,H,X2B,X3B,HR,OBP,SLG,BA,AB)
lp <- subset(combo,playerID %in% lost_players & yearID == 2001) %>% select(playerID,H,X2B,X3B,HR,OBP,SLG,BA,AB)
lp
combo_2001 <- subset(combo,yearID = 2001 & teamID != 'OAK' & BA > 300)
pl <- ggplot(combo_2001, aes(salary,H)) + geom_point()
ggplot(combo_2001, aes(salary,H)) + geom_point()
combo_2001 <- subset(combo,yearID == 2001 & teamID != 'OAK' & BA > 300)
summary(combo_2001)
combo_2001 <- subset(combo,yearID == 2001 & teamID != 'OAK' & BA > 300)
combo_2001 <- subset(combo,yearID == 2001 & teamID.x != 'OAK' & BA > 300)
summary(combo_2001)
ggplot(combo_2001, aes(salary,H)) + geom_point()
head(combo)
combo_2001 <- subset(combo,yearID == 2001 & BA > 300)
head(combo)
combo_2001 <- subset(combo,yearID == 2001 & BA > 300)
combo_2001 <- subset(combo,yearID = 2001 & BA > 300)
head(combo)
combo_2001 <- subset(combo,yearID = 200)
head(combo)
head(combo_2001)
head(combo_2001)
combo_2001 <- subset(combo,yearID = 200)
head(combo_2001)
combo_2001 <- subset(combo,yearID == 200)
head(combo_2001)
combo_2001 <- subset(combo,yearID == 2001)
head(combo_2001)
ggplot(combo_2001, aes(salary,H)) + geom_point()
ggplot(combo_2001, aes(salary,H)) + geom_point(aes(color = teamID.x))
combo_2001 <- subset(combo,yearID == 2001 & H > 300)
head(combo_2001)
summary(combo_2001)
combo_2001 <- subset(combo,yearID == 2001 & AB > 300)
head(combo_2001)
ggplot(combo_2001, aes(salary,H)) + geom_point(aes(color = teamID.x))
arrange(combo_2001,desc(H))
combo_2001 %>% select(playerID,H,X2B,X3B,HR,OBP,SLG,BA,AB,salary) %>% arrange(desc(H))
combo_2001 %>% select(playerID,H,X2B,X3B,HR,OBP,SLG,BA,AB,salary) %>% arrange(desc(H))
summarise(flights,avg_air_time = mean(air_time, na.rm = TRUE))
summarise(lp,total_at_bats = sum(AB))
summarise(lp,total_at_bats = avg(OBP))
summarise(lp,total_at_bats = mean(OBP))
summarise(lp,avg_obp = mean(OBP))
summarise(lp,total_at_bats = sum(AB))
summarise(lp,avg_obp = mean(OBP))
summarise(lp,total_at_bats = sum(AB),avg_obp = mean(OBP))
combo_2001 %>% select(playerID,H,X2B,X3B,HR,OBP,SLG,BA,AB,salary) %>% arrange(desc(H)) %>% slice(1:20)
replacement_id <- c("pierrju01", "pujolal01", "berkmla01")
rp <- subset(combo_2001,playerID %in% replacement_id)
rp
summarise(rp,total_at_bats = sum(AB),avg_obp = mean(OBP), total_salary = SUM(salary))
summarise(rp,total_at_bats = sum(AB),avg_obp = mean(OBP), total_salary = sum(salary))
summarise(lp,total_at_bats = sum(AB),avg_obp = mean(OBP))
